<?xml version="1.0"?>
<project name="Approdictio" default="compile" basedir=".">

  <property name="release" value="41"/>
  
  <target name="compile" description="compiles java classes">
    <mkdir dir="build/classes"/>
    <javac srcdir="src/java"
      destdir="build/classes"
      source="1.7"
      listfiles="yes"
      fork="false"
      debug="true"
      deprecation="true"
      includeantruntime="false"
      >
      <compilerarg value="-Xlint:unchecked"/>
      <patternset includes="approdictio/**/*.java"
	excludes="**/package-info.java"/>
    </javac>
  </target>

  <target name="javadoc" depends=""
    description="run javadoc to create api docs">
    <javadoc sourcepath="src/java"
      packagenames="*"
      destdir="build/ApprodictioDoc"
      windowtitle="Approximate Lookup Dictionaries"
      header="&lt;span class='approheader'&gt;Approdictio v${release}&lt;/span&gt;"
      overview="src/java/overview.html"

      Bottom="&lt;div class=&quot;approlink&quot;>download: &lt;a
      href='https://developer.berlios.de/project/showfiles.php?group_id=10293' target='_top'>developer.berlios.de&lt;/a>&lt;br/>home page: &lt;a href=&quot;http://approdictio.berlios.de/&quot; target='_top'>approdictio.berlios.de&lt;/a>&lt;/div>"
      >
    </javadoc>
  </target> 
  
  <target name="jar" depends="cleanClasses, compile">
    <mkdir dir="build"/>
    <jar destfile="build/Approdictio-${release}.jar" basedir="Classes"
      includes="**/*.class"
      excludes="**/Test*.class">
      <manifest>
	<attribute name="release" value="${release}" />
	<attribute name="timestamp" value="${time.now}" />
      </manifest>
    </jar>
  </target>

  <target name="docjar" depends="cleanDoc, javadoc">
    <mkdir dir="build"/>
    <zip destfile="build/ApprodictioDoc-${release}.zip"
      basedir="build" includes="ApprodictioDoc/**">
    </zip>
  </target>

  <target name="upload" depends="jar, docjar"
    description="upload jars for publishing to berlios">
    <upload file="build/Approdictio-${release}.jar"/>
    <upload file="build/ApprodictioDoc-${release}.zip"/>
  </target>

  <target name="cleanClasses">
    <delete dir="build/classes" />
  </target>
  <target name="cleanDoc">
    <delete dir="build/ApprodictioDoc"/>
  </target>

  <target name="compiletests">
    <javac srcdir="testsrc"
      destdir="build/classes"
      source="1.5"
      listfiles="no"
      fork="false"
      debug="true"
      deprecation="true"
      includeantruntime="true"
      >
      <compilerarg value="-Xlint:unchecked"/>
      <patternset includes="**/*.java" />
    </javac>
  </target>

  <target name="unitest" depends="compile, compiletests"
    description="run unit test with junit4">

    <junit fork="yes"> <!-- printsummary="withOutAndErr" -->
      <jvmarg value="-Demma.coverage.out.file=build/coverage/emmadata.ec"/>
      <classpath>
	<pathelement location="${user.home}/.ant/lib/emma.jar"/>
	<pathelement location="build/coverage/Classes"/>
	<pathelement location="build/classes"/>
      </classpath>

      <formatter type="plain" usefile="false"/>

      <batchtest fork="yes">
	<fileset dir="build/classes">
	  <include name="**/Test*.class"/>
	  <exclude name="**/*$*.class"/>
	</fileset>
      </batchtest>
    </junit>
  </target>

  <target name="emmainstr">
    <delete dir="build/coverage/Classes"/>
    <emma verbosity="quiet">
      <instr instrpath="Classes"
	destdir="build/coverage/Classes"
	metadatafile="build/coverage/emmadata.em"
	merge="false">
	<filter excludes="*.Test*"/>
      </instr>
    </emma>
  </target>

  <target name="coverage" depends="unitest"
    description="run unit test collecting coverage data and produce a report">
    <emma verbosity="quiet">
      <report sourcepath="src/java" 
	columns="name,line,block,method"
	sort="+line,+block,+method"
	metrics="line:95"
	>
	<fileset dir="build/coverage">
	  <!-- find emmadata.ec. and emmadata.em -->
	  <include name="emmadata.*" />
	</fileset>
	
	<html outfile="build/covereport/coverage.html" />
      </report>
    </emma>
  </target>

  <tstamp>
    <format property="time.now" pattern="yyyy-MM-dd hh:mm:ss"/>
  </tstamp>

  <macrodef name="upload" description="upload to berlios incoming dir">
    <attribute name="file"/>
    <sequential>
      <exec executable="lftp" inputstring="cd incoming;put @{file}">
	<arg line="-u anonymous,pifpafpuf@gmx.de ftp.berlios.de"/>
      </exec>
    </sequential>
  </macrodef>

  <target name="e">
    <echoproperties/>
  </target>

  <!-- try out sonar -->
  <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
    <classpath path="${user.home}/tmp/sonar-3.0/sonar-ant-task-1.3.jar"/>
  </taskdef>
</project>
